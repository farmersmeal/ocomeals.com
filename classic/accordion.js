! function(r) { r.gfAccordion = function(t, a) { var d = { mode: "production", single: 1, times: 500, effect: "ease-out", openTab: 1, onChanged: function() {} };
        this.settings = {}; var l = r(t),
            c = this;
        this.init = function() { this.settings = r.extend({}, d, a);
            this.settings.effect; var n = this.settings.times,
                t = this.settings.mode,
                e = this.settings.openTab,
                i = []; if (e) { var o = e.split(","); if (o.length) { for (var s = 0; s < o.length; s++) i.push(parseInt(o[s]) - 1);
                    l.children("[data-accordion]").each(function(t) {-1 !== i.indexOf(t) ? (r(this).children("[data-control]").addClass("opend"), r(this).children("[data-content]").stop(!0, !1).slideDown(n)) : (r(this).children("[data-content]").hide(), r(this).children("[data-control]").removeClass("opend")) }) } } return (!l.find("[data-control]").hasClass("none") && "dev" == t ? l.find(".wrapp-icon") : l.find("[data-control]")).on("click", function() { var t; return r(this).closest(".module").is(l) && (c.runAccordion(this), 0 < (t = r(this).closest("[data-control]")).length && 0 < t.next("[data-content]").length && t.next("[data-content]").find('[data-label="Carousel"]').each(function() { r(this).children(".module").owlCarousel("invalidate", "width").owlCarousel("refresh") })), !1 }), setTimeout(function() { l.find('[data-label="Carousel"]').each(function() { r(this).children(".module").owlCarousel("invalidate", "width").owlCarousel("refresh") }) }, 50), !1 }, this.runAccordion = function(t) { var n, e = r(t).closest("[data-control]"),
                i = e.closest("[data-accordion-group]"),
                o = e.next("[data-content]"),
                s = c.settings.single; return _time = c.settings.times, "0" == s ? (o.stop(!0, !1).slideToggle(_time, function() { c.clearSlide(i) }), e.toggleClass("opend")) : e.hasClass("opend") ? o.stop(!0, !1).slideToggle(_time, function() { e.toggleClass("opend"), c.clearSlide(i) }) : (i.offset().top < window.pageYOffset && (s = 0 < (n = i.find("[data-control].opend")).length && parseInt(e.attr("data-index")) > parseInt(n.attr("data-index")) ? n.next("[data-content]").height() : 0, ((n = r("html")).scrollTop() || r("html body").scrollTop()) && s && n.animate({ scrollTop: n.scrollTop() - s }, { duration: _time, easing: "linear" })), i.find("[data-content]").slideUp({ duration: _time, easing: "linear", complete: function() { r(this).prev("[data-control]").removeClass("opend") } }), o.stop(!0, !1).slideToggle(_time, function() { r(this).is(":visible") && e.toggleClass("opend"), c.clearSlide(i) })), this.settings.onChanged(t), !1 }, this.clearSlide = function(t) { t.find("[data-content]").css("height", "") }, this.init() }, r.fn.gfAccordion = function(n) { return this.each(function() { var t;
            null == r(this).data("gfaccordion") && (t = new r.gfAccordion(this, n), r(this).data("gfaccordion", t)) }) } }(window.GemQuery || jQuery);